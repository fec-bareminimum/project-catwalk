name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: ♻️ Clone repository
        uses: actions/checkout@v2

      - name:	🔖  Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: ⬇️  Install npm dependencies
        run: npm ci

      - name: 🏗️  Build
        run: npm run build --if-present

      - name: ✅  Run tests
        run: npm run test

      # https://dev.to/thejaredwilcurt/coverage-badge-with-github-actions-finally-59fa
      - name: 💯 Generate test coverage report
        run: |
          # var SUMMARY = [
          #   '',
          #   '=============================== Coverage summary ===============================',
          #   'Statements   : 32.5% ( 39/120 )',
          #   'Branches     : 38.89% ( 21/54 )',
          #   'Functions    : 21.74% ( 5/23 )',
          #   'Lines        : 31.93% ( 38/119 )',
          #   '================================================================================',
          #   ''
          # ];
          # SUMMARY = SUMMARY.split('\n')[5]; // 'Lines        : 31.93% ( 38/119 )'
          # SUMMARY = SUMMARY.split(':')[1].split('(')[0].trim(); // '31.93%'
          SUMMARY="$(npm test -- --coverageReporters='text-summary' | tail -2 | head -1)"
          TOKENS=($SUMMARY)
          # process.env.COVERAGE = '31.93%';
          echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV

          # var REF = 'refs/pull/27/merge.json';
          REF=${{ github.ref }}
          # console.log('github.ref: ' + REF);
          echo "github.ref: $REF"
          # var PATHS = REF.split('/');
          IFS='/' read -ra PATHS <<< "$REF"
          # var BRANCH_NAME = PATHS[1] + PATHS[2];
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          # console.log(BRANCH_NAME); // 'pull_27'
          echo $BRANCH_NAME
          # process.env.BRANCH = 'pull_27';
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
      - name: 📛 Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 7d4c25ef2e97e8de523ef7c1fee26e8e
          filename: your-repo-name__${{ env.BRANCH }}.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: jest


#    # Main doesn't have a PR for comments so skip that branch
#     # We don't want multiple comments about code coverage, just just run it once on 14.x on Linux
#     - if: ${{ github.ref != 'refs/heads/main' && matrix.node-version == '14.x' && matrix.os == 'ubuntu-latest' }}
#       uses: romeovs/lcov-reporter-action@v0.2.16
#       with:
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         lcov-file: ./tests/coverage/lcov.info
